@name Nuclier
@inputs Z
@outputs 
@persist A B C D E F G H I
@trigger 
interval((Z*10)+1)

if(first()|duped()){
 holoCreate(1)
holoCreate(2)  
holoCreate(3)  
holoCreate(4)  
holoCreate(5)   
holoCreate(6)
holoCreate(7)  
holoCreate(8)  
holoCreate(9)  
holoCreate(10)   
holoCreate(13) 
holoCreate(14) 
holoPos(13,holoEntity(7):pos())
holoPos(14,holoEntity(7):pos())
#This is the suns solar part
holoCreate(11)
#############################
##Earths atmosphere##
holoCreate(15)
holoScale(15,vec(3,3,3))
holoColor(15,vec(30,30,100))
holoAlpha(15,100)
holoModel(15,"hq_sphere")


holoScale(11,vec(130,130,130))
holoModel(11,"hq_sphere")
holoPos(11,entity():pos() + vec(0,0,1000))
holoColor(11,vec(255,100,0))
holoAlpha(11,50)



holoPos(1,entity():pos()+vec(0,0,1000))
holoModel(1,"hq_sphere")
holoScale(1,vec(40,40,40))
holoColor(1,vec(255,250,0))

holoModel(2,"hq_sphere")
holoModel(3,"hq_sphere")
holoModel(4,"hq_sphere")
holoModel(5,"hq_sphere")
holoModel(6,"hq_sphere")
holoModel(7,"hq_sphere")
holoModel(8,"hq_sphere")
holoModel(9,"hq_sphere")
holoModel(10,"hq_sphere")
holoModel(11,"hq_sphere")

holoModel(13,"hq_torus_thin")
holoModel(14,"hq_torus_thin")

holoScale(2,vec(1,1,1))
holoScale(3,vec(2.41,2.41,2.41))
holoScale(4,vec(2.54,2.54,2.54))
holoScale(5,vec(1.34,1.34,1.34))
holoScale(6,vec(28.4,28.4,28.4))
holoScale(7,vec(24,24,24))
holoScale(8,vec(10.2,10.2,10.2))
holoScale(9,vec(9.88,9.88,9.88))
holoScale(10,vec(1,1,1))
holoScale(13,vec(100,100,5))
holoScale(14,vec(40,40,5))
holoAng(13,ang(30,0,0))
holoAng(14,ang(30,0,0))
for(I=1,11){
 holoEntity(I):setTrails(100,10,10,"trails/physbeam",vec(255,0,0),255)
}


#This is the Moon#
holoCreate(12)
holoPos(12,holoEntity(4):pos()+vec(100,100,0))
holoColor(12,vec(150,150,150))
holoModel(12,"hq_sphere")
##################
#Colouring the planets#
holoColor(4,vec(100,150,150))
holoColor(2,vec(50,50,0))
holoColor(3,vec(100,50,50))
holoColor(5,vec(255,0,0))
holoColor(6,vec(200,200,200))
holoColor(7,vec(200,200,120))
holoColor(8,vec(20,20,150))
holoColor(9,vec(50,30,150))
holoColor(10,vec(100,30,150))
holoColor(13,vec(111,111,120))
holoColor(14,vec(111,111,120))

holoMaterial(1,"models/antlion/antlion_innards")

holoMaterial(6,"models/props_lab/cornerunit_cloud")

}




A = A + 4.147
B=B+1.6222
C=C+1
D=D+0.53
E=E+0.083
F=F+0.0344827586206897
G=G+0.0119047619047619
H=H+0.0060606060606061
I=I+0.0040207094073584

holoAng(1,ang(D/5,C/5,0))

holoPos(2,entity():pos() + vec(cos(A)*1000,sin(A)*1000,1000))
holoPos(3,entity():pos() + vec(cos(B)*1500,sin(B)*1500,1000))
holoPos(4,entity():pos() + vec(cos(C)*2000,sin(C)*2000,1000))
holoPos(5,entity():pos() + vec(cos(D)*2500,sin(D)*2500,1000))
holoPos(6,entity():pos() + vec(cos(E)*3000,sin(E)*3000,1000))
holoPos(7,entity():pos() + vec(cos(F)*3500,sin(F)*3500,1000))
holoPos(8,entity():pos() + vec(cos(G)*4000,sin(G)*4000,1000))
holoPos(9,entity():pos() + vec(cos(H)*4500,sin(H)*4500,1000))
holoPos(10,entity():pos() + vec(cos(I)*5000,sin(I)*5000,1000))

holoPos(12,holoEntity(4):pos()+vec(50,50,20))
holoPos(13,holoEntity(7):pos())
holoPos(14,holoEntity(7):pos())
holoPos(15,holoEntity(4):pos())
