@name holo_speedoV2_inverted
@inputs Speed RPM
@outputs Speedo Tacho MaxSpeed MaxRPM
@persist Idx E:entity TimeMode Material:string Ang1 Ang2 AngTime Time
@persist Color1:vector Color2:vector Color3:vector Color4:vector
@persist Color5:vector Color6:vector
@trigger 

if( first() )
{
    #Make sure each number can be divised by 5
    MaxSpeed = 6700
    MaxRPM = 280
    
    
    #Size / Scale / Pos
    Scale = 1/1.7
    Start_Pos = -vec(0,0,-2)
    Offset = 0.75
    Height = 1/4
    
    #Speedo Max Angle
    Ang1=220
    #Rpm Max Angle
    Ang2=220
    
    
    #Speedo Color/material
        #Inside background
        Color1=vec(25,25,25)
        #Outside Gauge
        Color2=vec(5,5,5)
        #Inside Needle arrow
        Color3=vec(255,0,0)
        #Inside line/detail
        Color4=vec(100,0,0)
        #Inside outline circle
        Color5=vec(75,75,75)
        #redline
        Color6=vec(175,0,0)
    #Materials
    Material="phoenix_storms/mat/mat_phx_metallic"
    
    
    
    ###DONT EDIT ANYTHING BELLOW#####
    
    
    E = entity()
    #Speedo circle
    holoCreate(1)
    holoPos(1, E:toWorld(Start_Pos+Scale*vec(0,0,-4)))
    holoScale(1, Scale*vec(19,19,10)/12)
    holoAng(1, E:angles())
    holoColor(1, Color1)
    holoModel(1, "hq_cylinder" )
    holoMaterial(1, Material)
    holoParent(1, E )
    
    #speedo outline circle
    holoCreate(2)
    holoPos(2, E:toWorld(Start_Pos+Scale*vec(0,0,8/2)))
    holoScale(2, Scale*vec(20,20,8)/12)
    holoAng(2, E:angles())
    holoColor(2, Color2)
    holoModel(2, "hq_tube_thin" )
    holoMaterial(2, Material)
    holoParent(2, E )
    
    #speedo circle inside
    holoCreate(3)
    holoPos(3, E:toWorld(Start_Pos+Scale*vec(0,0,1.3)))
    holoScale(3, Scale*vec(3,3,0.75)/12)
    holoAng(3, E:angles())
    holoColor(3, Color3)
    holoModel(3, "hq_tube_thick" )
    holoMaterial(3, Material)
    holoParent(3, E )
    
    #speedo line inside
    holoCreate(4)
    holoPos(4, E:toWorld(Start_Pos+Scale*vec(0,-3.8,1.3)))
    holoScale(4, Scale*vec(6,1.25,0.75)/12)
    holoAng(4, E:toWorld(ang(0,90,0)))
    holoColor(4, Color3)
    holoMaterial(4, Material)
    holoParent(4, 3 )
    
    holoCreate(5)
    holoPos(5, E:toWorld(Start_Pos+Scale*vec(0,2.5,1.3)))
    holoScale(5, Scale*vec(3,1.25,0.75)/12)
    holoAng(5, E:toWorld(ang(0,90,0)))
    holoColor(5, Color3)
    holoMaterial(5, Material)
    holoParent(5, 3 )
    
    
    
    #rpm circle
    holoCreate(6)
    holoPos(6, E:toWorld(Start_Pos+Scale*vec(-12,-12,-4.3-Height)))
    holoScale(6, Scale*vec(19*Offset,19*Offset,10)/12)
    holoAng(6, E:angles())
    holoColor(6, Color1)
    holoModel(6, "hq_cylinder" )
    holoMaterial(6, Material)
    holoParent(6, E )
    
    #rpm outline circle    
    holoCreate(7)
    holoPos(7, E:toWorld(Start_Pos+Scale*vec(-12,-12,8/2-Height)))
    holoScale(7, Scale*vec(20*Offset,20*Offset,8)/12)
    holoAng(7, E:angles())
    holoColor(7, Color2)
    holoModel(7, "hq_tube_thin" )
    holoMaterial(7, Material)
    holoParent(7, E )
    
    #rpm circle inside    
    holoCreate(8)
    holoPos(8, E:toWorld(Start_Pos+Scale*vec(-12,-12,1-Height)))
    holoScale(8, Scale*vec(3*Offset,3*Offset,0.75)/12)
    holoAng(8, E:angles())
    holoColor(8, Color3)
    holoModel(8, "hq_tube_thick" )
    holoMaterial(8, Material)
    holoParent(8, E )
        
    #rpm line inside    
    holoCreate(9)
    holoPos(9, E:toWorld(Start_Pos+Scale*vec(-12,-3.8*Offset-12,1-Height)))
    holoScale(9, Scale*vec(6*Offset,1.25*Offset,0.75)/12)
    holoAng(9, E:toWorld(ang(0,90,0)))
    holoColor(9, Color3)
    holoMaterial(9, Material)
    holoParent(9, 8 )
        
    holoCreate(10)
    holoPos(10, E:toWorld(Start_Pos+Scale*vec(-12,2.5*Offset-12,1-Height)))
    holoScale(10, Scale* vec(3*Offset,1.25*Offset,0.75)/12)
    holoAng(10, E:toWorld(ang(0,90,0)))
    holoColor(10, Color3)
    holoMaterial(10, Material)
    holoParent(10, 8 )
    
    
    
    
    #inside speedo outline
    holoCreate(11)
    holoPos(11, E:toWorld(Start_Pos+Scale*vec(0,0,1.3)))
    holoScale(11, Scale*vec(18,18,0.75)/12)
    holoAng(11, E:angles())
    holoColor(11, Color5)
    holoModel(11, "hq_tube_thin" )
    holoMaterial(11, Material)
    holoParent(11, E )
    
    holoCreate(12)
    holoPos(12, E:toWorld(Start_Pos+Scale*vec(-12,-12,1-Height)))
    holoScale(12, Scale*vec(18*Offset,18*Offset,0.75)/12)
    holoAng(12, E:angles())
    holoColor(12, Color5)
    holoModel(12, "hq_tube_thin" )
    holoMaterial(12, Material)
    holoParent(12, E )
    
    
    #line inside speedo
        #redline
        holoCreate(13)
        holoPos(13, E:toWorld(Start_Pos+Scale*vec(2.3,-7.7,1.2)))
        holoScale(13, Scale*vec(2,5,0.75)/12)
        holoAng(13, E:angles()+ang(0,15,0))
        holoColor(13, Color6)
        holoMaterial(13, Material)
        
    holoCreate(14)
    holoPos(14, E:toWorld(Start_Pos+Scale*vec(0,-7.5,1.3)))
    holoScale(14, Scale*vec(1.25,1.3,0.75)/12)
    holoAng(14, E:angles())
    holoColor(14, Color4)
    holoMaterial(14, Material)
    
    holoCreate(15)
    holoPos(15, E:toWorld(Start_Pos+Scale*vec(0,-7.5,1.3)))
    holoScale(15, Scale*vec(1.25,1.3,0.75)/12)
    holoAng(15, E:angles())
    holoColor(15, Color4)
    holoMaterial(15, Material)
    
    holoCreate(16)
    holoPos(16, E:toWorld(Start_Pos+Scale*vec(0,-7.5,1.3)))
    holoScale(16, Scale*vec(1.25,1.3,0.75)/12)
    holoAng(16, E:angles())
    holoColor(16, Color4)
    holoMaterial(16, Material)
    
    holoCreate(17)
    holoPos(17, E:toWorld(Start_Pos+Scale*vec(0,-7.5,1.3)))
    holoScale(17, Scale*vec(1.25,1.3,0.75)/12)
    holoAng(17, E:angles())
    holoColor(17, Color4)
    holoMaterial(17, Material)
    
    holoCreate(18)
    holoPos(18, E:toWorld(Start_Pos+Scale*vec(0,-7.5,1.3)))
    holoScale(18, Scale*vec(1.25,1.3,0.75)/12)
    holoAng(18, E:angles())
    holoColor(18, Color4)
    holoMaterial(18, Material)
    
    holoCreate(19)
    holoPos(19, E:toWorld(Start_Pos+Scale*vec(0,-7.5,1.3)))
    holoScale(19, Scale*vec(1.25,1.3,0.75)/12)
    holoAng(19, E:angles())
    holoColor(19, Color6)
    holoMaterial(19, Material)
    
    holoCreate(20)
    holoPos(20, E:toWorld(Start_Pos+Scale*vec(0,-7.5,1.3)))
    holoScale(20, Scale*vec(1.25,1.3,0.75)/12)
    holoAng(20, E:angles())
    holoColor(20, Color6)
    holoMaterial(20, Material)
    
    
    
    #line inside rpm
        #redline
        #holoCreate(21)
        #holoPos(21, E:toWorld(Start_Pos+Scale*vec(-12,-7.8*Offset-12,1-Height)))
        #holoScale(21, Scale*vec(5*Offset,2*Offset,0.75)/12)
        #holoAng(21, E:angles()+ang(0,15,0))
        #holoColor(21, Color6)
        #holoMaterial(21, Material)
        #holoParent(21, E )
        
    holoCreate(22)
    holoPos(22, E:toWorld(Start_Pos+Scale*vec(-12,-7.6*Offset-12,1-Height)))
    holoScale(22, Scale* vec(1.25*Offset,1.3*Offset,0.75)/12)
    holoAng(22, E:angles())
    holoColor(22, Color4)
    holoMaterial(22, Material)
    
    holoCreate(23)
    holoPos(23, E:toWorld(Start_Pos+Scale*vec(-12,-7.6*Offset-12,1-Height)))
    holoScale(23, Scale* vec(1.25*Offset,1.3*Offset,0.75)/12)
    holoAng(23, E:angles())
    holoColor(23, Color4)
    holoMaterial(23, Material)
    
    holoCreate(24)
    holoPos(24, E:toWorld(Start_Pos+Scale*vec(-12,-7.6*Offset-12,1-Height)))
    holoScale(24, Scale* vec(1.25*Offset,1.3*Offset,0.75)/12)
    holoAng(24, E:angles())
    holoColor(24, Color4)
    holoMaterial(24, Material)
    
    holoCreate(25)
    holoPos(25, E:toWorld(Start_Pos+Scale*vec(-12,-7.6*Offset-12,1-Height)))
    holoScale(25, Scale* vec(1.25*Offset,1.3*Offset,0.75)/12)
    holoAng(25, E:angles())
    holoColor(25, Color4)
    holoMaterial(25, Material)
    
    holoCreate(26)
    holoPos(26, E:toWorld(Start_Pos+Scale*vec(-12,-7.6*Offset-12,1-Height)))
    holoScale(26, Scale* vec(1.25*Offset,1.3*Offset,0.75)/12)
    holoAng(26, E:angles())
    holoColor(26, Color4)
    holoMaterial(26, Material)
    
    holoCreate(27)
    holoPos(27, E:toWorld(Start_Pos+Scale*vec(-12,-7.6*Offset-12,1-Height)))
    holoScale(27, Scale* vec(1.25*Offset,1.3*Offset,0.75)/12)
    holoAng(27, E:angles())
    holoColor(27, Color6)
    holoMaterial(27, Material)
    
    holoCreate(28)
    holoPos(28, E:toWorld(Start_Pos+Scale*vec(-12,-7.6*Offset-12,1-Height)))
    holoScale(28, Scale* vec(1.25*Offset,1.3*Offset,0.75)/12)
    holoAng(28, E:angles())
    holoColor(28, Color6)
    holoMaterial(28, Material)
    
    
    runOnTick(1)
    Time=0
    TimeMode=0
    AngTime=0
}

#holoAng(3,E:toWorld(ang(0,45-(Ang1/MaxSpeed)*Speed,0)))
#holoAng(8,E:toWorld(ang(0,60-(Ang2/MaxRPM)*RPM,0)))

#Sart initializing line in speedo
if(TimeMode==0){Time=Time+1
if(Time>20&AngTime<=300){AngTime=AngTime+1}

#Start parenting
if(AngTime<=1.5){
    holoParent(13, 3 )
    holoParent(14, 3 )
    holoParent(15, 3 )
    holoParent(16, 3 )
    holoParent(17, 3 )
    holoParent(18, 3 )
    holoParent(19, 3 )
    holoParent(20, 3 )
    
    holoParent(22, 8 )
    holoParent(23, 8 )
    holoParent(24, 8 )
    holoParent(25, 8 )
    holoParent(26, 8 )
    holoParent(27, 8 )
    holoParent(28, 8 )
}

#Initialize holo at first angle
if(Time>15&Time<=25){
    holoAng(3,E:toWorld(ang(0,45-(Ang1/Ang1)*0,0)))
    holoAng(8,E:toWorld(ang(0,60-(Ang2/Ang2)*0,0)))
}

#Start rotating
if(Time>25){
    holoAng(3,E:toWorld(ang(0,45-(Ang1/Ang1)*AngTime,0)))
    holoAng(8,E:toWorld(ang(0,60-(Ang2/Ang2)*AngTime,0)))
}

#All unparenting
if(Time>20&Time<=25){holoParent(14,E),holoParent(22,E)}
if(AngTime>=Ang1*0.1666){holoParent(15,E)}
if(AngTime>=(Ang1*0.1666)*2){holoParent(16,E)}
if(AngTime>=(Ang1*0.1666)*3){holoParent(17,E)}
if(AngTime>=(Ang1*0.1666)*4){holoParent(18,E)}
if(AngTime>=(Ang1*0.1666)*5){holoParent(19,E)}
if(AngTime>=Ang1){holoParent(20,E),holoParent(13,E)}

if(AngTime>=Ang2*0.1666){holoParent(23,E)}
if(AngTime>=(Ang2*0.1666)*2){holoParent(24,E)}
if(AngTime>=(Ang2*0.1666)*3){holoParent(25,E)}
if(AngTime>=(Ang2*0.1666)*4){holoParent(26,E)}
if(AngTime>=(Ang2*0.1666)*5){holoParent(27,E)}
if(AngTime>=Ang2){holoParent(28,E)}

}
if(AngTime>=300){TimeMode=1}
if(TimeMode==1){
    AngTime=AngTime-1
    holoAng(3,E:toWorld(ang(0,45-(Ang1/Ang1)*AngTime,0)))
    holoAng(8,E:toWorld(ang(0,60-(Ang2/Ang2)*AngTime,0)))
    if(AngTime<=0){TimeMode=2,AngTime=0}
}

if(TimeMode==2){
    holoAng(3,E:toWorld(ang(0,45-(Ang1/MaxSpeed)*Speed,0)))
    holoAng(8,E:toWorld(ang(0,60-(Ang2/MaxRPM)*RPM,0)))
}
