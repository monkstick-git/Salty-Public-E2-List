@name Mong (Muneris Pong) V0.1
@inputs EGP:wirelink RightUp RightDown Reset Active LeftUp LeftDown
@outputs X Y Yvar ALERT
@persist A X A2 Y Xvar Yvar Skill Paddle1Pos Paddle1Height Paddle2Pos Paddle2Height LeftPaddelRandom RightPaddelRandom LeftPoints RightPoints Sprite AI
@trigger 
if(first() | duped())
{
   for(I=1,20){
    EGP:egpBox(I,vec2(256,256),vec2(3,3)) 
    EGP:egpColor(I,vec(I*12 + 50,I*12 + 50,50))   
}
    AI = 1
    A = 1
    A2 = 1
    X = 256
    Y = 256
    Xvar = 10
    Yvar = 0
    
    Paddle1Height = 128
    Paddle2Height = 128
    LeftPoints = 0
    RightPoints = 0
    
    EGP:egpBox(22,vec2(3,256),vec2(3,Paddle1Height))    
    EGP:egpBox(24,vec2(509,256),vec2(3,Paddle2Height))  
    EGP:egpBox(25,vec2(256,256),vec2(5,512))
    EGP:egpFont(26,"ChatFont")
    EGP:egpText(26,LeftPoints:toString(),vec2(128,32))
    EGP:egpText(27,RightPoints:toString(),vec2(384,32))
    EGP:egpFont(26,"ChatFont")
    Paddle1Pos = 256
    Paddle2Pos = 256

    Skill = 12 #Higher number = Better AI
}
function makeSound()
{
    Rnd = floor(random(100))
    entity():soundPlay(Rnd,0.2,"buttons/button16.wav")
    soundPitch(Rnd,clamp((A*300) + (Xvar + Yvar) ,100,160))
}

function xMove(Direction)
{
    X=X+(Xvar * Direction)
}

function yMove(Direction)
{
    Y=Y+(Yvar * Direction)
}

function movement()
{
    if(A == 1)
    {
        xMove(1)
    }
    else
    {
        xMove(-1)
    }
    
    if(A2 == 1)
    {
        yMove(1)
    }
    else
    {
        yMove(-1)
    }
    if(Sprite < 20){
    Sprite = Sprite + 1
    }else{
    Sprite = 1
    }
    
    EGP:egpPos(Sprite,vec2(X,Y))
}

function angleMath()
{
    RightPad = (Paddle2Pos + (Paddle2Height / 2) ) 
    RightPad2 = (Paddle2Pos - (Paddle2Height / 2) ) 
    
    LeftPad = (Paddle1Pos + (Paddle1Height / 2) ) 
    LeftPad2 = (Paddle1Pos - (Paddle1Height / 2) ) 
    
    if(Y > LeftPad2 & Y < LeftPad)
    {
      LeftCollide = 1         
    }else{
      LeftCollide = 0   
    }
    
    if(Y > RightPad2 & Y < RightPad)
    {
      RightCollide = 1         
    }else{
      RightCollide = 0   
    }
    
    if(X >= (512) & RightCollide == 1 & X < (513 + Xvar) )
    {
     A = 0   
    makeSound()
      Xvar = clamp(Xvar + 1,0,15)
      RightBounce = ((RightPad2 + RightPad)/2 - Y) / 2
      Yvar = clamp(Yvar - RightBounce,-Xvar,Xvar)
        if(Yvar <= 0){
            Yvar = clamp(abs(Yvar),0,Xvar)
            if(A2 == 0){A2 = 1}else{S2 = 0}
        }
      LeftPaddelRandom = random(-Paddle1Height/2,Paddle1Height/2)
      RightPaddelRandom = random(-Paddle2Height/2,Paddle2Height/2)
    }
    
    if(X <= 0 & LeftCollide == 1 & X > 0 - Xvar - 1)
    {
     A = 1   
    makeSound()
      Xvar = clamp(Xvar + 1,0,15)
        LeftBounce = ((LeftPad2 + LeftPad)/2 - Y) / 2
        Yvar = clamp(Yvar - LeftBounce,-Xvar,Xvar)
        if(Yvar <= 0){
            Yvar = clamp(abs(Yvar),0,Xvar)
            if(A2 == 0){A2 = 1}else{S2 = 0}
        }
        LeftPaddelRandom = random(-Paddle1Height/2,Paddle1Height/2)
        RightPaddelRandom = random(-Paddle2Height/2,Paddle2Height/2)
    }
    
    if(Y >= (512 + Yvar))
    {
     A2 = 0   
    makeSound()
    }
    
    if(Y <= (0 - Yvar))
    {
     A2 = 1   
    makeSound()
    }
    
    if(X > 512 + Xvar)
    {
      X = 256
      Y = 256
      Xvar = 4
      Yvar = random(1,4)
    LeftPoints = LeftPoints + 1
    EGP:egpText(26,LeftPoints:toString(),vec2(128,32))
    EGP:egpText(27,RightPoints:toString(),vec2(384,32))  
    }
    
    if(X < 0 - Xvar)
    {
      X = 256
      Y = 256
      Xvar = 4
      Yvar = random(1,4)
        RightPoints = RightPoints + 1
        EGP:egpText(26,LeftPoints:toString(),vec2(128,32))
        EGP:egpText(27,RightPoints:toString(),vec2(384,32))  
    }
}

function collisions()
{
   
}

runOnTick(1)
if(tickClk() & Active)
{
movement()
angleMath()
collisions()

if(LeftUp)
{
    Paddle1Pos = Paddle1Pos - 10
}

if(LeftDown)
{
    Paddle1Pos = Paddle1Pos + 10 
}

if(RightUp)
{
    Paddle2Pos = Paddle2Pos - 10
}

if(RightDown)
{
    Paddle2Pos = Paddle2Pos + 10 
}

if(AI == 1)
{
if(Paddle1Pos < (Y + LeftPaddelRandom) & (X<400))
{
    Paddle1Pos = clamp(Paddle1Pos + ((Skill)),0 + (Paddle1Height/2),512 - (Paddle1Height/2))  
}elseif((X<400)){
    Paddle1Pos = clamp(Paddle1Pos  - ((Skill)),0 + (Paddle1Height/2),512 - (Paddle1Height/2))  
}else{}

if(Paddle2Pos < (Y + RightPaddelRandom) & (X>144))
{
    Paddle2Pos = clamp(Paddle2Pos + ((Skill)),0 + (Paddle2Height/2),512 - (Paddle2Height/2))  
}elseif((X>144)){
    Paddle2Pos = clamp(Paddle2Pos  - ((Skill)),0 + (Paddle2Height/2),512 - (Paddle2Height/2))  
}else{}
}

if(AI == 2)
{
if(Paddle1Pos < (Y + LeftPaddelRandom) & (X<400))
{
    Paddle1Pos = clamp(Paddle1Pos + ((Skill)),0 + (Paddle1Height/2),512 - (Paddle1Height/2))  
}elseif((X<400)){
    Paddle1Pos = clamp(Paddle1Pos  - ((Skill)),0 + (Paddle1Height/2),512 - (Paddle1Height/2))  
}else{}

}


EGP:egpPos(24,vec2(509,Paddle2Pos))
EGP:egpPos(22,vec2(3,Paddle1Pos))

if(Yvar <0){
 ALERT = 1   
}

}

if(Reset)
{
 reset()   
}
