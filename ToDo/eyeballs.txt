@name Eyeballs
@inputs 
@outputs 
@persist 
@trigger 
runOnTick(1)
if(first()|duped()){
 for(I=1,4){
 holoCreate(I)
holoModel(I,"hq_sphere")
}   
holoPos(1,entity():pos()+vec(10,0,20))
holoPos(2,entity():pos()+vec(-10,0,20))
holoScale(3,vec(0.5,0.5,0.5))
holoScale(4,vec(0.5,0.5,0.5))
holoPos(3,entity():pos()+vec(14,0,20))
holoPos(4,entity():pos()+vec(-6,0,20))
holoColor(3,vec(30,30,30))
holoColor(4,vec(30,30,30))
holoParent(3,1)
holoParent(4,2)


holoCreate(5)
holoColor(5,vec(100,255,50))
holoModel(5,"hq_sphere")
holoPos(5,entity():pos() + vec(0,-13,10))
holoScale(5,vec(3,3,3))

holoAng(5,ang(0,90,0))
holoParent(1,5)
holoParent(2,5)
holoParent(5,entity())

holoCreate(6)
holoCreate(7)
holoModel(6,"hq_rcylinder")
holoModel(7,"hq_rcylinder")

holoScale(6,vec(0.5,0.5,1))
holoScale(7,vec(0.5,0.5,1))

holoPos(6,entity():pos() + vec(20,0,10))
holoPos(7,entity():pos() + vec(-20,0,10))

holoParent(6,5)
holoParent(7,5)
}

if(tickClk()){
holoAng(1,(owner():pos()+vec(0,0,25) - holoEntity(1):pos()):toAngle())
holoAng(2,(owner():pos()+vec(0,0,25) - holoEntity(2):pos()):toAngle())
holoAng(5,(owner():pos()/2+vec(0,0,35) - holoEntity(2):pos()/2):toAngle())



}
