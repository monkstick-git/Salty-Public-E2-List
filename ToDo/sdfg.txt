@name Oblivion Drone
@inputs [LeftTopG LeftBottomG RightTopG RightBottomG]:entity PodAimPos:vector
@outputs 
@persist [LeftTopV LeftBottomV RightTopV RightBottomV]:vector [LeftTopA LeftBottomA RightTopA RightBottomA]:angle DroneBase:entity
@trigger all 
runOnTick(1)
if(dupefinished()){reset()}

if(first()){
      DroneBase = entity():isConstrainedTo()
}  
     
    
if(tickClk()){    

    if(!LeftTopG:isPlayerHolding()){LeftTopG:propFreeze(1)}
    if(!LeftBottomG:isPlayerHolding()){LeftBottomG:propFreeze(1)}
    if(!RightTopG:isPlayerHolding()){RightTopG:propFreeze(1)}
    if(!RightBottomG:isPlayerHolding()){RightBottomG:propFreeze(1)}

  
    
    LeftTopG:setPos(DroneBase:toWorld(vec())+DroneBase:forward()*30+DroneBase:up()*30)
    LeftBottomG:setPos(DroneBase:toWorld(vec())+DroneBase:forward()*30+DroneBase:up()*5)
    RightTopG:setPos(DroneBase:toWorld(vec())+DroneBase:forward()*-30+DroneBase:up()*30)
    RightBottomG:setPos(DroneBase:toWorld(vec())+DroneBase:forward()*-30+DroneBase:up()*5)
}
