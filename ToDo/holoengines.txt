@name HoloEngines
@inputs BUTTON On MOVE:entity
@outputs TORQUE
@persist A B Sound:string
@trigger 

interval(10)
if(first()|duped()){
     Sound = "/acf_engines/r7_petrolmedium.wav"
     soundPlay(1,0,Sound)
holoCreate(1)  holoCreate(2) holoCreate(3) holoCreate(4) holoCreate(5) holoCreate(6)
holoModel(2,"models/XQM/jetenginepropeller.mdl")
holoModel(3,"models/xqm/pistontype1medium.mdl") holoModel(4,"models/xqm/pistontype1medium.mdl") holoModel(5,"models/xqm/pistontype1medium.mdl") holoModel(6,"models/xqm/pistontype1medium.mdl") 
holoPos(1,entity():pos() + vec(0,-5,30)) holoPos(2,entity():pos() + vec(0,38,30)) holoPos(3,entity():pos() + vec(0,0,40))
holoScale(1,vec(2,7,2))
#holoAng(2,ang(0,90,0))
holoColor(1,vec(30,30,30)) holoColor(2,vec(255,255,255)) holoColor(3,vec(50,50,50)) holoColor(4,vec(50,50,50)) holoColor(5,vec(50,50,50)) holoColor(6,vec(50,50,50))
holoParent(1,entity()) holoParent(2,entity()) holoParent(3,1) holoParent(4,1) holoParent(5,1) holoParent(6,1)
}
E=entity():pos()
if(On==1&BUTTON==1&B<45){B=B+0.15}else{if(BUTTON==0 & B >0){B=B-0.1}} if(BUTTON==0&B<10&On==1){B=B+0.2}

A=A+B
holoAng(2,ang(0,90,A*2))

holoPos(3,E + vec(0,25,sin(A*3)*-7+40))
holoPos(4,E + vec(0,5,sin(-A*3)*-7+40))
holoPos(5,E + vec(0,-15,sin(-A*3)*-7+40))
holoPos(6,E + vec(0,-35,sin(A*3)*-7+40))
soundPitch(1,B*5)
TORQUE=B*1000
MOVE:applyTorque(vec(0,0,B*1000))
entity():setText(ops():toString() + " Ops")
