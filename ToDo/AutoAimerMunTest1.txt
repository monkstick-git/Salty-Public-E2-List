@name AutoAimerMunTest1
@inputs On Shoot Ent:entity Ent2:entity
@outputs Out1
@persist  OldSpeed:vector
@trigger 
if(first()|duped()){
runOnTick(1)
holoCreate(1)
holoModel(1,"hq_sphere")
holoScale(1,vec(0.4,0.4,0.4))

runOnTick(2)
holoCreate(2)
holoModel(2,"hq_sphere")
}

if(tickClk()){
rangerFilter(Ent)
Ranger = rangerOffset(10000,Ent:pos(), Ent:forward())
holoPos(1, Ranger:pos())
holoAng(1, Ent:angles())
rangerFilter(Ent2)
Ranger2 = rangerOffset(10000,Ent2:pos(), Ent2:forward())
holoPos(2, Ranger2:pos())
holoAng(2, Ent2:angles())
findByClass("player")
findIncludePlayer("muneris")
#findIncludePlayerProps("Wiggdy")
#findByModel("models/props_phx/construct/wood/wood_wire1x1x2.mdl")
Find = findClosest(Ent:pos())

Speed = -(Find:vel() - OldSpeed)
Speed2 = Speed/10



Place = Find:pos() + vec( sin(Speed:length() )*10,cos(Speed:length())*10,cos(Speed:length())*10)

#Place = Find:pos() + vec(sin(curtime()*Speed)*Speed2,cos(curtime()*Speed)*Speed2,cos(curtime()*Speed)*Speed2)
Ent:setAng((Place - (Ent:pos())):toAngle()*ang(1,1,1))
Ent2:setAng((Place - (Ent2:pos())):toAngle()*ang(1,1,1))


if(Find:pos():distance(entity():pos()) < 9000){
 Out1 = 1   
}else{
Out1=0
}
OldSpeed = Find:vel()
}


