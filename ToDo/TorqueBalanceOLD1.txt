@name TorqueBalanceOLD1
@inputs A L R U D
@outputs T1 T2 ANG Delta ANG2 O1 O2 Thruster
@persist ANG ANGOLD Delta ANG2 ANGOLD2 Delta2 L1 R1 U1 D1 Height Height1 OldHeight Temp
@trigger 
#@model models/hunter/blocks/cube025x025x025.mdl

runOnTick(1)
if(first() | duped())
    {
Height = entity():pos():z() 
    }
    
if(tickClk()){    
ANG = entity():angles():roll()
ANG2 = entity():angles():pitch()
Height1 = entity():pos():z()

Delta = ANG - ANGOLD
Delta2 = ANG2 - ANGOLD2
T1 = -(Delta * 6)
T1 = T1 + -ANG

T2 = -(Delta2 * 6)
T2 = T2 + -ANG2

if(entity():pos():z() < Height ){
Thruster = -(Height1 - OldHeight)*6 + (abs(Height - OldHeight)*1)
entity():isWeldedTo():applyForce(vec(0,0,Thruster*entity():isWeldedTo():mass()*(entity():angVel():yaw()/1500)))
Temp = Temp + 1
}else{
if(Temp > 1){Temp = Temp - 10}
Thruster = 0
}

#entity():isWeldedTo():applyTorque(vec(T1*entity():isWeldedTo():mass() * 50,0,0))
#entity():isWeldedTo():applyTorque(vec(0,T2*entity():isWeldedTo():mass() * 50,0))
ANGOLD2 = ANG2
ANGOLD = ANG
OldHeight = entity():pos():z()
if(entity():angVel():yaw() < 3200){

entity():isWeldedTo():applyTorque(vec(0,0,entity():isWeldedTo():mass() * Temp))
}else{}
entity():setText(entity():angVel():yaw():toString())
}

#
