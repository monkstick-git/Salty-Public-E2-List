@name AutoGearing Mun v3.1
@inputs W S Rpm ClutchKey Toggle CruiseUp CruiseDown Speed BreakIn
@outputs Gear Clutch Throttle Delta Cruise CruiseSpeed Break
@persist UpTime Gear DownTime MaxRpm MinRpm Delta OldRpm W BreakAmount Cruise CruiseSpeed Speedvel CalcSpeed OldSpeed
@trigger  
runOnTick(10)
interval(1000)
if(first() | duped() )
{
    MaxRpm = 5900
    MinRpm = 4200 
    UpTime = 0
    DownTime = 0
    BreakAmount = 2
}

function normal gearUp()
{
    if(!S){
  Gear = clamp(Gear + 1,1,7)   
}
}

function checkUp()
{
    UpTime = UpTime + 50
    Clutch = 0
    if(UpTime > 50)
    {
        gearUp()  
        UpTime = 0 
    }
}   

function normal gearDown()
{
    if(!S){
      Gear = clamp(Gear - 1,1,7)   
    }
}

function checkDown()
{
    DownTime = DownTime + 15
    Clutch = 1.1
    if(DownTime > 50)
    {
        gearDown()  
        DownTime = 0 
        Clutch = 1.1
    }
}   


if(tickClk())
{
    

    if((Rpm > MaxRpm & ClutchKey == 0 & Clutch < 0.1))
    {
        checkUp()  
        Clutch = 0 
    }
    
    if(MinRpm > Rpm)
    {
      checkDown()  
        Clutch = 1 
    }else{
        Clutch = clamp(Clutch - 0.1,0,1.2)
    }
    
    if(W | S | (Cruise & Speed < CruiseSpeed))
    {
        Throttle = clamp(Throttle + 10,0,100)   
    }else{
        Throttle = clamp(Throttle - 10,0,100)   
    }
    
    if(S)
    {
     Gear = 8   
    }
    
    if(W & Gear == 8)
    {
     Gear = 1   
    }   
    
    if(BreakIn)
    {
     Break = BreakAmount   
    }else{
    Break = 0   
    }
    
    
}

    if((Toggle & ~Toggle))
    {
        Cruise = !Cruise
    }
    
    if(CruiseUp)
    {
     CruiseSpeed = clamp(CruiseSpeed + 1,0,60)   
    }
    
    if(CruiseDown)
    {
     CruiseSpeed = clamp(CruiseSpeed - 1,0,60)    
    }

Speedvel = entity():vel():length()
CalcSpeed = Speedvel - OldSpeed
entity():setText(floor(CalcSpeed):toString())
OldSpeed = Speedvel


